Cypress.env('viewports').forEach((viewport) => {
    describe(`Wishlist drawer: ${viewport.device} (${viewport.width} x ${viewport.height})`, () => {
        beforeEach(function () {
            cy.viewport(viewport.width, viewport.height)
            cy.intercept({ resourceType: /xhr|fetch/ }, { log: false })
            cy.login('wishlist')
        })
        it('The selected product image and title are correct', function () {
            cy.section('main test')
            cy.visit(Cypress.env('allNewURL'))
            if (viewport.width > Cypress.env('mobileBreak')) {
                cy.collectionHeart(0).parents('[data-test-id="search--search-product-card"]').then(card => {
                    cy.wrap(card).find('h3').then((name) => {
                        const nameText = name.text()
                        cy.wrap(card).find('img').first().attribute('src').then(src => {
                            const imgSrc = src.split(':')[1].replace(/_\d+x/, '')
                            cy.step('click add to wishlist button')
                            cy.wrap(card).find('[data-test-id="wishlist-button"]').click()
                            cy.getByData('wishlist-drawer--add--header--product-name').text()
                                .should('to.match', new RegExp(name, 'i'))
                            cy.getByData('wishlist-drawer--add--header--product-image').attribute('src')
                                .should('eq', imgSrc)
                            cy.getByData('wishlist-drawer--add--header--product-image')
                                .should('be.visible')
                                .and($img => expect($img[0].naturalWidth).to.be.gt(0))
                        })
                    })
                })
            }
        })
        it('List dropdown', { scrollBehavior: false }, function () {
            cy.section('open wishlist drawer')
            cy.visit(Cypress.env('allNewURL'))
            cy.step('click add to wishlist button')
            cy.collectionHeart(0).then(heart => {
                cy.wrap(heart).scrollIntoView({ offset: { top: -400, left: 0 } }).click()
                cy.waitUntil(() => cy.get('body').then($ele => $ele.find('[data-test-id="wishlist-drawer--add"]').length > 0))
                cy.getByData('wishlist-drawer--add--body--list-dropdown-button').click()
                cy.waitUntil(() => cy.getByData('wishlist-drawer--add--body--list-dropdown-button').attribute('aria-expanded').then(attr => attr === 'true'))
                cy.getByData('wishlist-drawer--add--body--list-option').first().find('p').first().then(list => {
                    const listText = list.text()
                    cy.section('I can select a different wishlist from the dropdown and see it displayed after the dropdown is closed')
                    cy.step('select second list')
                    cy.wrap(list).click()
                    cy.getByData('wishlist-drawer--add--body--list-dropdown-button').find('p').first().text()
                        .should('to.match', new RegExp(listText, 'i'))
                    cy.step('click add to list')
                    cy.getByData('wishlist-drawer--add--footer--add-to-list-button').click()
                    cy.section('My last added to wishlist is selected by default')
                    cy.step('click add to wishlist button on second product')
                    cy.collectionHeart(1).scrollIntoView({ offset: { top: -400, left: 0 } }).click()
                    cy.getByData('wishlist-drawer--add--body--list-dropdown-button').find('p').first().text()
                        .should('to.match', new RegExp(listText, 'i'))
                })
                cy.section('reset')
                cy.step('close drawer')
                cy.get('body').click(15, 15, { force: true })
                cy.step('remove from wishlist')
                cy.wrap(heart).scrollIntoView({ offset: { top: -400, left: 0 } }).click()
            })
        })
        it('Selected variant', { scrollBehavior: false }, function () {
            cy.section('open wishlist drawer')
            cy.visit('https://www.dollskill.com/collections/dress-on-sale')
            cy.step('click add to wishlist button')
            cy.collectionHeart(1).scrollIntoView({ offset: { top: -400, left: 0 } }).click()
            cy.getByData('wishlist-drawer--add--footer').find('div').first().within(() => {
                cy.section('The smallest size in stock variant is selected by default')
                cy.get('button').not('[data-test-id="wishlist-drawer--add--footer--oos-size-option"]').first().then(size => {
                    const sizeText = size.text()
                    cy.wrap(size)
                        .should('have.attr', 'disabled')
                    cy.getByData('wishlist-drawer--add--footer--selected-size').text()
                        .should('to.match', new RegExp(sizeText, 'i'))
                })
                cy.section('I can see the selected wishlist underline update to the selected variant when clicking a different one')
                cy.get('button[disabled]').parent().then(defaultSize => {
                    cy.wrap(defaultSize)
                        .hasPseudoElement('::after')
                        .should('eq', true)
                    cy.getByData('wishlist-drawer--add--footer--size-option').first().parent().then(newSize => {
                        cy.wrap(newSize).click()
                        cy.wrap(newSize)
                            .hasPseudoElement('::after')
                            .should('eq', true)
                    })
                    cy.wrap(defaultSize)
                        .hasPseudoElement('::after')
                        .should('eq', false)
                })
            })
        })
        it('I can click out of the drawer or click the x to close the drawer', function () {
            cy.section('open wishlist drawer')
            cy.visit(Cypress.env('allNewURL'))
            if (viewport.width > Cypress.env('mobileBreak')) {
                cy.section('I can click the x to close the drawer')
                cy.collectionHeart(0).click()
                cy.getByData('wishlist-drawer--add')
                    .should('exist')
                cy.getByData('wishlist-drawer--add--header--close-button').click()
                cy.getByData('wishlist-drawer--add')
                    .should('not.exist')
            }
            cy.section('I can click out of the drawer to close the drawer')
            cy.collectionHeart(0).click()
            cy.getByData('wishlist-drawer--add')
                .should('exist')
            cy.get('body').click(15, 15, { force: true })
            cy.getByData('wishlist-drawer--add')
                .should('not.exist')
        })
        it('I can click the CTA at the bottom to add the item to the selected wishlist', function () {
            cy.section('main test')
            cy.visit(Cypress.env('allNewURL'))
            cy.step('click heart on first product')
            cy.collectionHeart(0).click()
            cy.getByData('wishlist-drawer--add--header--product-name').text().then(product => {
                cy.getByData('wishlist-drawer--add--body--list-dropdown-button').find('p').first().then(list => {
                    const listText = list.text()
                    cy.step('click add to list')
                    cy.getByData('wishlist-drawer--add--footer--add-to-list-button').click()
                    cy.step('go to wishlist')
                    cy.get('swym-wishlist-btn').click()
                    cy.getByData('wishlist-portal--lists--list-grid--list--name').contains(listText, { matchCase: false }).click()
                    cy.getByData('search--default-product-card-name-and-brand').contains(product)
                        .should('exist')
                    cy.section('reset')
                    cy.getByData('search--default-product-card-name-and-brand').contains(product).parents('[data-test-id="search--default-product-card"]').find('[data-test-id="wishlist-button"]').click()
                })
            })
        })
        it('After an item is added to the my wishlist, the drawer closes and the heart icon on the product card is filled in', function () {
            cy.section('main test')
            cy.visit(Cypress.env('allNewURL'))
            cy.step('click heart on first product')
            cy.collectionHeart(0).then(heart => {
                cy.wrap(heart).click()
                cy.waitUntil(() => cy.get('body').then($ele => $ele.find('[data-test-id="wishlist-drawer--add"]').length > 0))
                cy.getByData('wishlist-drawer--add--footer--add-to-list-button').click()
                cy.getByData('wishlist-drawer--add')
                    .should('not.exist')
                cy.wrap(heart)
                    .should('have.class', 'wishlist-filled')
                cy.section('reset')
                cy.wrap(heart).click()
                cy.wrap(heart)
                    .should('not.have.class', 'wishlist-filled')
            })
        })
    })
})