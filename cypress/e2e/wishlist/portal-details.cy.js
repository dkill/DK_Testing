const emptyWishlistCTA = 'LOOKS LIKE YOUR WISHLIST NEEDS WISHES'

Cypress.env('viewports').forEach((viewport) => {
    describe(`Header heart icon: ${viewport.device} (${viewport.width} x ${viewport.height})`, () => {
        beforeEach(function () {
            cy.viewport(viewport.width, viewport.height)
            cy.intercept({ resourceType: /xhr|fetch/ }, { log: false })
            cy.visit(Cypress.env('baseURL'))
            cy.closeAttn()
        })
        it(`I can see a product grid of my wishlisted items in my currently selected list`, function () {
            cy.login('wishlist')
            cy.step('click wishlist icon')
            cy.get('.add-to-wishlist-btn[data-wish-action="viewWishlists"]').click()
            cy.get('swym-wishlist-portal').find('a').eq(2).click()
        })
        it('Removing and adding to wishlist from details page', function () {
            cy.login('wishlist')
            cy.section('I can remove items from my wishlist by clicking the heart and see the icon revert back to being unfilled')
            cy.step('click header wishlist heart')
            cy.get('[data-wish-action="viewWishlists"]').click()
            cy.step('click first list')
            cy.get('swym-wishlist-portal').find('a').first().click()
            cy.getByData('search--undefined-product-card').first().as('card').find('h3').text().then((name) => {
                cy.step('click heart to remove from wishlist')
                cy.get('@card').find('[data-wish-action="addToWishlist"]').click()
                cy.get('@card').find('[data-wish-action="addToWishlist"]')
                    .should('not.have.class', 'wishlist-filled')
                cy.section('The removed item is visible in the wishlist until I reload the page')
                cy.get('@card')
                    .should('be.visible')
                cy.step('reload')
                cy.reload()
                cy.get('@card').find('h3').contains(name)
                    .should('not.exist')
            })
            cy.section('Removed items can be added to a different wishlist by clicking the heart before the page has reloaded')
            cy.get('@card').find('h3').text().then((name) => {
                cy.step('click heart to remove from wishlist')
                cy.get('@card').find('[data-wish-action="addToWishlist"]').click()
                cy.waitUntil(() => cy.get('[data-wish-action="addToWishlist"]').attribute('class').then(classList => !classList.includes('wishlist-filled')))
                cy.step('click heart to add to wishlist')
                cy.get('@card').find('[data-wish-action="addToWishlist"]').click()
                cy.step('select new wishlist')
                cy.get('button#headlessui-listbox-button-P0-1').click()
                cy.get('li#headlessui-listbox-option-P0-1').first().as('newList').find('p').first().text().then((list) => {
                    cy.get('@newList').click()
                    cy.step('add to wishlist')
                    cy.get('button').contains('Add To List').click()
                    cy.section('I can move between wishlists by clicking the wishlist title and selecting a different wishlist from the dropdown')
                    cy.step('go to list the item was just added to')
                    cy.get('button#headlessui-menu-button-P0-0').click().wait(500)
                    cy.get('button[role="menuitem"]').contains(list, {matchCase: false}).click()
                    cy.getByData('search--undefined-product-card').find('h3').contains(name)
                        .should('be.visible')
                })
            })
        })
        it('I can click the quick add to cart (+) button in the bottom left corner of the product card image and see the quick add to cart display with the variant selected that was added to wishlist', { scrollBehavior: false }, function () {
            cy.login('wishlist')
            cy.section('add to wishlist')
            cy.step('go to all new')
            cy.allNew(viewport)
            cy.collectionCard().eq(1).as('card').find('[data-test-id="search--search-product-card-name-and-brand"]').find('h3').text().then((product) => {
                cy.step('click heart')
                cy.get('@card').find('button[data-wish-action="addToWishlist"]').click()
                cy.get('button#headlessui-listbox-button-P0-1').find('p').first().text().then((list) => {
                    // add not oos
                    // change eq to last() (currently selecting add to list button w last)
                    cy.get('div[data-headlessui-portal]').find('section').eq(2).find('button').eq(2).as('sizeBtn').text().then((size) => {
                        const regexSize = new RegExp('^' + size + '$')
                        cy.step('select last size')
                        cy.get('@sizeBtn').click()
                        cy.step('add to wishlist')
                        cy.get('button').contains('Add To List', {matchCase: false}).click()
                        cy.section('check wishlist')
                        cy.step('go to wishlists portal')
                        cy.get('swym-wishlist-btn[data-wish-action="viewWishlists"]').click()
                        cy.step('go to wishlist details page')
                        cy.get('h3').contains(list, {matchCase: false}).click()
                        cy.get('h3').contains(product, {matchCase: false}).as('wishProduct')
                            .should('exist')
                            .and('be.visible')
                        cy.step('click quick add button')
                        cy.get('@wishProduct').parents(`div[data-test-id="${Cypress.env('collCard')}"]`).as('card').find('[data-test-id="product-card--quick-add-button"]').click()
                        cy.waitUntil(() => cy.get('body').then($ele => $ele.find('[data-test-id="product-card--quick-add-container"]').length > 0))
                        cy.findByData('@card', 'product-card--quick-add-container').contains('size', {matchCase: false}).text().then((selection) => {
                            const selSize = selection.split(': ')[1]
                            cy.wrap(selSize)
                                .should('eq', size)
                        })
                        cy.section('quick add to cart')
                        cy.getByData('product-card--quick-add-size-label').contains('label', regexSize, {matchCase: false}).siblings('input').attribute('value').then((vid) => {
                            cy.step('add to cart')
                            cy.findByData('@card', 'product-card--quick-add-to-cart-button').click()
                            cy.getByData('cart--cart-item').contains('div', product).find('[data-test-id="cart--cart-item-variant"]').attribute('data-vid')
                                .should('eq', vid)
                        })
                    })
                })
            })
            cy.section('reset')
            cy.step('close cart')
            cy.getByData('cart--close-button').click()
            cy.step('remove from wishlist')
            cy.get('@card').find('button[data-wish-action="addToWishlist"]').click()
        })
        it('I can share my wishlist by clicking the paper airplane icon at teh top of the grid', function () {
            cy.login('wishlist')
            cy.section('go to wishlist')
            cy.step('click header heart to go to portal')
            cy.get('swym-wishlist-btn[data-wish-action="viewWishlists"]').click()
            cy.step('go to first wishlist detail page')
            cy.get('h3').first().click()
            // click airplane
            // fill out form
            // share list
        })
        it.only('I can delete my wishlist by clicking the delete wishlist CTA in the top right and see a confirmation drawer animate in', function () {
            cy.login('wishlist')
            cy.section('go to wishlist')
            cy.step('click header heart to go to portal')
            cy.get('swym-wishlist-btn[data-wish-action="viewWishlists"]').click()
            cy.step('go to last wishlist detail page')
            cy.get('h3').contains('delete', { matchCase: false }).click()
            cy.section('delete wishlist')
            cy.step('click delete wishlist button')
            cy.get('button').contains('Delete Wishlist', { matchCase: false }).click()
            cy.get('#headlessui-dialog-overlay-P0-0')
                .should('be.visible')
            cy.step('click button to confirm deletion')
            cy.get('button[type="submit"]').contains('Delete Wishlist', { matchCase: false}).click()
            cy.get('h3').contains('delete', { matchCase: false })
                .should('not.exist')
            cy.section('reset')
            cy.step('go to sale collection')
            cy.getByData('header--desktop-link').contains('sale', { matchCase: false }).click()
            cy.step('click heart to add to wishlist')
            cy.collectionCard().first().find('button[data-wish-action="addToWishlist"]').click()
            cy.step('click create new wishlist')
            cy.get('button#headlessui-listbox-button-P0-1').click()
            cy.get('button').contains('Create New Wishlist', { matchCase: false }).click()
            cy.get('input[placeholder="Type Here"]').type('delete')
            cy.get('button').contains('create wishlist', { matchCase: false }).click()
            cy.step('add to new wishlist')
            cy.get('button').contains('add to list', { matchCase: false }).click()
        })
    })
})