const emptyWishlistCTA = 'LOOKS LIKE YOUR WISHLIST NEEDS WISHES'
const wishlistName = 'my wishlist'
const deleteWishlist = 'delete'

Cypress.env('viewports').forEach((viewport) => {
    describe(`Wishlist portal - Wishlist detail page: ${viewport.device} (${viewport.width} x ${viewport.height})`, () => {
        beforeEach(function () {
            cy.viewport(viewport.width, viewport.height)
            cy.intercept({ resourceType: /xhr|fetch/ }, { log: false })
            cy.login('wishlist')
        })
        it('I can see a product grid of my wishlisted items in my currently selected list', function () {
            cy.section('go to wishlist')
            cy.visit(Cypress.env('wishlistURL'))
            cy.getByData('wishlist-portal--lists--list-grid--list').contains(wishlistName, { matchCase: false }).click()
            cy.getByData('wishlist-portal--detail--product-grid')
                .should('be.visible')
            cy.wishlistCard()
                .should('be.visible')
        })
        it('I can remove items from my wishlist by clicking the heart and see the icon revert back to being unfilled', function () {
            cy.section('go to wishlist')
            cy.visit(Cypress.env('wishlistURL'))
            cy.getByData('wishlist-portal--lists--list-grid--list').contains(wishlistName, { matchCase: false }).click()
            cy.section('main test')
            cy.wishlistCard().first().find('h3').then(product => {
                const productText = product.text()
                cy.step('click heart to remove from wishlist')
                cy.wrap(product).parents('[data-test-id="search--default-product-card"]').find('[data-test-id="wishlist-button"]').as('heart').click().wait(1000)
                cy.get('@heart')
                    .should('not.have.class', 'wishlist-filled')
                cy.section('The removed item is visible in the wishlist until I reload the page')
                cy.wishlistCard().contains(productText)
                    .should('be.visible')
                cy.step('reload')
                cy.reload()
                cy.wishlistCard().contains(productText)
                    .should('not.exist')
            })
        })
        it('Removed items can be added to a different wishlist by clicking the heart before the page has reloaded', function () {
            cy.section('go to wishlist')
            cy.visit(Cypress.env('wishlistURL'))
            cy.getByData('wishlist-portal--lists--list-grid--list').contains(wishlistName, { matchCase: false }).click()
            cy.section('main test')
            cy.wishlistCard().first().find('h3').then(product => {
                const productText = product.text()
                cy.step('click heart to remove from wishlist')
                cy.wrap(product).parents('[data-test-id="search--default-product-card"]').as('card').find('[data-test-id="wishlist-button"]').as('heart').click()
                cy.waitUntil(() => cy.get('@heart').attribute('class').then(classList => !classList.includes('wishlist-filled')))
                cy.step('click heart to add to wishlist')
                cy.get('@heart').click()
                cy.step('select new wishlist')
                cy.getByData('wishlist-drawer--add--body--list-dropdown-button').click()
                cy.getByData('wishlist-drawer--add--body--list-option').eq(3).find('p').first().then(list => {
                    const listText = list.text()
                    cy.wrap(list).click()
                    cy.step('add to wishlist')
                    cy.getByData('wishlist-drawer--add--footer--add-to-list-button').click()
                    cy.step('go to wishlist portal')
                    cy.get('swym-wishlist-btn').click()
                    cy.getByData('wishlist-portal--lists--list-grid--list').contains(listText, { matchCase: false }).click()
                    cy.wishlistCard().contains(productText, { matchCase: false })
                        .should('be.visible')
                })
            })
        })
        it('I can move between wishlists by clicking the wishlist title and selecting a different wishlist from the dropdown', function () {
            cy.section('go to wishlist')
            cy.visit(Cypress.env('wishlistURL'))
            cy.getByData('wishlist-portal--lists--list-grid--list').contains(wishlistName, { matchCase: false }).click()
            cy.section('main test')
            cy.step('click list dropdown')
            cy.getByData('wishlist-portal--detail--list-dropdown-button').click()
            cy.getByData('wishlist-portal--detail--list-dropdown-item').first().then(list => {
                const listText = list.text()
                cy.step('click first list')
                cy.wrap(list).click()
                cy.getByData('wishlist-portal--detail--list-name').text()
                    .should('to.match', new RegExp(listText, 'i'))
            })
        })
        it('I can click the quick add to cart (+) button in the bottom left corner of the product card image and see the quick add to cart display with the variant selected that was added to wishlist', { scrollBehavior: false }, function () {
            cy.section('add to wishlist')
            cy.visit(Cypress.env('allNewURL'))
            cy.collectionHeart(0).parents('[data-test-id="search--search-product-card"]').find('h3').then(product => {
                const productText = product.text()
                cy.step('click heart')
                cy.wrap(product).parents('[data-test-id="search--search-product-card"]').find('[data-test-id="wishlist-button"]').as('heart').scrollIntoView({ offset: { top: -400, left: 0 } }).click()
                cy.waitUntil(() => cy.get('body').then($ele => $ele.find('[data-test-id="wishlist-drawer--add"]').length > 0))
                cy.getByData('wishlist-drawer--add--body--list-dropdown-button').find('p').first().text().then(list => {
                    cy.getByData('wishlist-drawer--add--footer--size-option').last().then(sizeBtn => {
                        const size = sizeBtn.text()
                        const regexSize = new RegExp('^' + size + '$', 'i')
                        cy.step('select last size')
                        cy.wrap(sizeBtn).click()
                        cy.step('add to wishlist')
                        cy.getByData('wishlist-drawer--add--footer--add-to-list-button').click()
                        cy.waitUntil(() => cy.get('@heart').attribute('class').then(classList => classList.includes('wishlist-filled')))
                        cy.section('main test')
                        cy.step('go to wishlists portal')
                        cy.get('swym-wishlist-btn').click()
                        cy.step('go to wishlist details page')
                        cy.getByData('wishlist-portal--lists--list-grid--list').contains(list, { matchCase: false }).click()
                        cy.wishlistCard().contains(productText, { matchCase: false })
                            .should('exist')
                            .and('be.visible')
                        cy.step('click quick add button')
                        cy.wishlistCard().contains('div[data-test-id="search--default-product-card"]', productText).as('card').find('[data-test-id="product-card--quick-add-button"]').click()
                        cy.waitUntil(() => cy.get('@card').then($ele => $ele.find('[data-test-id="product-card--quick-add-size-label"]').length > 0))
                        cy.findData('@card', 'product-card--quick-add-container').contains('p', 'size', { matchCase: false }).text().then(selection => {
                            const selSize = selection.split(': ')[1]
                            cy.wrap(selSize)
                                .should('to.match', regexSize)
                        })
                        cy.section('quick add to cart')
                        cy.getByData('product-card--quick-add-size-label').contains('label', regexSize, { matchCase: false }).siblings('input').attribute('value').then(vid => {
                            cy.step('add to cart')
                            cy.findData('@card', 'product-card--quick-add-to-cart-button').click()
                            cy.getByData('cart--cart-item').contains('div', productText).find('[data-test-id="cart--cart-item-variant"]').attribute('data-vid')
                                .should('eq', vid)
                        })
                    })
                })
            })
            cy.section('reset')
            cy.step('close cart')
            cy.getByData('cart--close-button').click()
            cy.step('remove from wishlist')
            cy.findData('@card', 'wishlist-button').click()
        })
        it('I can share my wishlist by clicking the paper airplane icon at the top of the grid', function () {
            cy.section('go to wishlist')
            cy.visit(Cypress.env('wishlistURL'))
            cy.getByData('wishlist-portal--lists--list-grid--list').contains(wishlistName, { matchCase: false }).click()
            if (viewport.width > Cypress.env('mobileBreak')) {
                cy.getByData('wishlist-portal--detail--share-button').click()
            } else {
                cy.getByData('wishlist-portal--detail--list-dropdown-button').parents('div[data-headlessui-state]').siblings('button').click()
            }
            cy.section('main test')
            cy.getByData('wishlist-drawer--share').find('form').within(() => {
                cy.fixture('share').its('wishlist').then(function (share) {
                    this.share = share
                    cy.step('fill out form')
                    cy.get('input[name="fromName"]').type(this.share.sender)
                    cy.get('input[name="toEmail"]').type(this.share.email)
                    cy.get('textarea[name="note"]').type(this.share.note)
                    cy.step('submit')
                    cy.get('button[type="submit"]').click()
                    cy.get('p').contains('success', { matchCase: false })
                        .should('be.visible')
                })
            })
        })
        it('I can delete my wishlist by clicking the delete wishlist CTA in the top right and see a confirmation drawer animate in', function () {
            cy.section('go to wishlist')
            cy.visit(Cypress.env('wishlistURL'))
            cy.getByData('wishlist-portal--lists--list-grid--list').contains(deleteWishlist, { matchCase: false }).click()
            cy.section('main test')
            cy.step('click delete wishlist button')
            cy.getByData('wishlist-portal--detail--delete-button').click()
            cy.getByData('wishlist-drawer--delete')
                .should('exist')
            cy.step('delete wishlist')
            cy.getByData('wishlist-drawer--delete').find('button[type="submit"]').click()
            cy.url()
                .should('contain', '/pages/wishlists')
            cy.getByData('wishlist-portal--lists--list-grid--list').contains(deleteWishlist, { matchCase: false })
                .should('not.exist')
            cy.section('reset')
            cy.step('go to sale collection')
            cy.clickHeaderLink(viewport, 'sale')
            cy.step('click heart to add to wishlist')
            cy.collectionCard().find('button[data-test-id="wishlist-button"]').not('.wishlist-filled').first().click()
            cy.step('click create new wishlist from dropdown')
            cy.getByData('wishlist-drawer--add--body--list-dropdown-button').click()
            cy.getByData('wishlist-drawer--add--body--create-new-wishlist-button').click()
            cy.getByData('wishlist-drawer--create').find('form').within(() => {
                cy.step('type new wishlist name')
                cy.getByData('wishlist-drawer--create--name-input').type(deleteWishlist)
                cy.step('submit')
                cy.getByData('wishlist-drawer--create--submit').click()
            })
            cy.getByData('wishlist-drawer--add--footer--add-to-list-button').click()
        })
    })
})